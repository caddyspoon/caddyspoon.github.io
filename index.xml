<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
    <channel>
        <title>Social&#43;DEV.</title>
        <link>https://caddyspoon.github.io/</link>
        <description>Social&#43;DEV.. | 사회 개발</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 03 Oct 2022 21:34:14 &#43;0900</lastBuildDate>
            <atom:link href="https://caddyspoon.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>[React] 리액트에서 동적으로 스타일 적용하기</title>
    <link>https://caddyspoon.github.io/posts/2022/10/1003_react_style/</link>
    <pubDate>Mon, 03 Oct 2022 21:34:14 &#43;0900</pubDate><dc:creator>Caddyspoon</dc:creator><guid>https://caddyspoon.github.io/posts/2022/10/1003_react_style/</guid>
    <description><![CDATA[온라인 강의 사이트 udemy에서 React 완벽 가이드 with Redux, Next.js, TypeScript를 요즘 수강 중인데, 해당 강의에서 나온 내용을 토대로 몇 가지 제 방식대로 추가적으로 기록하는 의미로 동적으로 스타일을 변화시키는 법을 정리해보고자 합니다.
간단한 예시 화면을 만들어 보겠습니다. 멋진 팬톤의 Baby Blue를 배경색으로, Classic Blue를 버튼 색상으로 사용했습니다.
버튼이 있고 버튼을 누르면 텍스트 색상을 바꾸도록 해볼까요. 변했을 때 색상은 마찬가지로 팬톤 색상의 Rococco Red로 바꾸어 보겠습니다.
  1. 인라인에서 직접 스타일 하기 (Inline Style) JSX 코드의 style을 직접 변경하는 경우입니다.]]></description>
</item><item>
    <title>[자료구조] Trie를 활용한 단어 색인과 자동완성 구현하기</title>
    <link>https://caddyspoon.github.io/posts/2022/05/0530_trie_autocomplete/</link>
    <pubDate>Mon, 30 May 2022 22:10:32 &#43;0900</pubDate><dc:creator>Caddyspoon</dc:creator><guid>https://caddyspoon.github.io/posts/2022/05/0530_trie_autocomplete/</guid>
    <description><![CDATA[입력 상자에 입력된 어절을 기반으로, 이전에 입력한 키워드를 자동으로 완성하는 방법을 알아봅니다. 자료구조 Trie을 통해 구현할 수 있죠.
 제가 정말 잘 샀다 싶은 앱들이 몇 있는데요, 편한가계부 는 그 중 하나입니다. (iOS에서는) 문자를 기반으로 사용자의 결제 내역을 자동으로 저장해주고, 일정 기간별로 통계를 보여주어 지난 한 기간에서의 지출 내용을 통한 미래 지출 계획 설계, 자가 분석 (+ 반성) 등을 도와주는 앱입니다.
그리고 각 결제 내역을 입력할 때 세부 내용을 입력할 수 있는데, 단어 조각을 입력하면 사용자가 과거에 입력했던 기록을 기반으로 입력할 내용을 찾아줍니다.]]></description>
</item><item>
    <title>[Javascript] 사용자의 입력 완료까지 기다리기 &#34;debouncing&#34;</title>
    <link>https://caddyspoon.github.io/posts/2022/05/0520_debounce/</link>
    <pubDate>Tue, 24 May 2022 21:49:53 &#43;0900</pubDate><dc:creator>Caddyspoon</dc:creator><guid>https://caddyspoon.github.io/posts/2022/05/0520_debounce/</guid>
    <description><![CDATA[사용자의 입력을 기다렸다가 완전히 입력이 종료되었다고 판단되면 입력을 받도록 합니다. 디바운싱을 활용해서요.
 디바운싱이란? 사용자의 입력을 받아 처리해야 합니다. 단, 사용자의 모든 입력이 종료되었을 때만 입력을 받고 엔터 키를 누르는 등 입력이 종료되었다는 별도의 액션이 없습니다. 사용자의 입력이 완료 되었음을 어떻게 알고 처리할 수 있을까요?
간단해보이지만 실제로 구현하고자 하면 생각보다 쉽지 않을 것입니다. 이러한 문제를 해결하기 위한 개념이 deboucing 입니다.
디바운싱(debouncing)  기계식 스위치의 동작을 전기적 신호로 바꿀 때 생기는 진동 잡음을 제거하기 위하여 사용하는 하드웨어의 지연 회로, 소프트웨어의 적절한 지연 시간.]]></description>
</item><item>
    <title>토스트에디터 리액트 적용기 1</title>
    <link>https://caddyspoon.github.io/posts/2022/01/0105_%ED%86%A0%EC%8A%A4%ED%8A%B8%EC%97%90%EB%94%94%ED%84%B0/</link>
    <pubDate>Wed, 05 Jan 2022 01:26:00 &#43;0900</pubDate><dc:creator>Caddyspoon</dc:creator><guid>https://caddyspoon.github.io/posts/2022/01/0105_%ED%86%A0%EC%8A%A4%ED%8A%B8%EC%97%90%EB%94%94%ED%84%B0/</guid>
    <description><![CDATA[Toast UI Editor를 React에 적용하는 과정을 기록했습니다.
 WSYWIG는 What You See Is What You Get의 줄임말로, WSYWIG 에디터는 말 그대로 작성한 대로 보이는 에디터입니다. 블로그나 게시판 글 작성에서 흔히 쓰이는, 스타일을 직접 수정하고 글을 작성하는 그런 에디터 말이지요. 본 글은 WSYWIG 에디터 중 한 종류인 Toast UI Editor를 리액트 개발환경에 적용한 기록입니다.  서론: WYSIWYG 에디터 &amp; Toast UI Editor 프로젝트 중 WSYIWIG 에디터가 필요하게 됐습니다. 그리고 리액트 환경에서의 인기 WSYIWIG 에디터들은 대략 다음과 같은 에디터들이 있는 걸 알게 되었습니다.]]></description>
</item><item>
    <title>환영합니다.</title>
    <link>https://caddyspoon.github.io/posts/2021/10/%ED%99%98%EC%98%81%ED%95%A9%EB%8B%88%EB%8B%A4/</link>
    <pubDate>Sat, 16 Oct 2021 18:31:58 &#43;0900</pubDate><dc:creator>Caddyspoon</dc:creator><guid>https://caddyspoon.github.io/posts/2021/10/%ED%99%98%EC%98%81%ED%95%A9%EB%8B%88%EB%8B%A4/</guid>
    <description><![CDATA[반갑습니다! 캐디스푼의 아이티 블로그에 오신 것을 환영합니다!!
개발과 IT/SW의 내용과 함께, 차를 비롯한 저를 이루고 있는 것들로 채워질 공간입니다.
이렇게 만나게 되어 반갑습니다! 🤗]]></description>
</item></channel>
</rss>
